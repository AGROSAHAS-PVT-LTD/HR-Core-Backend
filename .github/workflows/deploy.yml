name: Deploy Laravel Application to Production Server

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  APP_ENV: production
  APP_DEBUG: false

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v3

    - name: 🏗️ Setup PHP with extensions
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, zip, curl, mysql
        tools: composer:v2
        coverage: none

    - name: 🗄️ Cache Composer dependencies
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: 🏗️ Prepare Directories
      run: |
        mkdir -p bootstrap/cache
        mkdir -p storage/framework/{cache,sessions,testing,views}
        mkdir -p storage/logs

    - name: 🧩 Install Composer Dependencies
      run: composer install --optimize-autoloader --no-dev --no-progress --no-interaction --prefer-dist

    - name: 🧱 Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'yarn'

    - name: 📦 Install Yarn Dependencies
      run: |
        yarn install --frozen-lockfile
        yarn add vue-loader@latest
        npx update-browserslist-db@latest

    - name: 🏗️ Build Assets (if needed)
      run: yarn build


    - name: 🚀 Synchronize Files to Server
      uses: easingthemes/ssh-deploy@v2.1.5
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      with:
        REMOTE_HOST: ${{ secrets.SSH_HOST }}
        REMOTE_USER: ${{ secrets.SSH_USER }}
        SOURCE: "."
        TARGET: "/var/www/gpsfieldmanager"
        ARGS: >
          -rltgoDzvO --delete
          --exclude .env
          --exclude node_modules
          --exclude vendor
          --exclude .git
          --exclude .github
          --exclude storage
          --exclude bootstrap/cache

    - name: ⚙️ Run Remote Laravel Artisan Commands
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd /var/www/gpsfieldmanager
          # Install Yarn if missing
          if ! command -v yarn &> /dev/null; then
            npm install -g yarn
          fi
          # Install composer dependencies with PHP version check
          if php -v | grep -q '8.1\|8.2'; then
            composer install --no-dev --optimize-autoloader
          else
            echo "Warning: PHP version not compatible with some packages"
            composer install --no-dev --optimize-autoloader --ignore-platform-reqs
          fi
          # Install node dependencies
          yarn install --production || npm install --production
          cp .env.example .env || true
          
         

